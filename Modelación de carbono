var studyArea = M_T_2018.geometry();

//NOMBRES DE BANDAS UTILIZADAS
var bandas = (['blue', 'green', 'red', 'nir', 'swir1', 'swir2']);

//VISUALIZACIÓN DE MOSAICOS
var visSWNIRRED = {bands: ['nir','swir1','red'], min: [1500,0,0], max: [6500, 6000, 6000]};
Map.addLayer(M_T_2000, visSWNIRRED, 'Mosaico 2000');
Map.addLayer(M_T_2005, visSWNIRRED, 'Mosaico 2005');
Map.addLayer(M_T_2015, visSWNIRRED, 'Mosaico 2015');
Map.addLayer(M_T_2018, visSWNIRRED, 'Mosaico 2018');

// Función para agregar índices espectrales comunes (y menos comunes) a una imagen.
// Incluye el vector espectral de diferencia normalizada de (Angiuli y Trianni, 2014)
function addIndices(img){
  //Vectores Espectrales de Diferencia Normalizada (NDSV)
  img = img.addBands(img.normalizedDifference(['blue','green']).rename('ND_blue_green'));
  img = img.addBands(img.normalizedDifference(['blue','red'  ])  .rename('ND_blue_red'));
  img = img.addBands(img.normalizedDifference(['blue','nir'  ])  .rename('ND_blue_nir'));
  img = img.addBands(img.normalizedDifference(['blue','swir1']).rename('ND_blue_swir1'));
  img = img.addBands(img.normalizedDifference(['blue','swir2']).rename('ND_blue_swir2'));

  img = img.addBands(img.normalizedDifference(['green','red'])  .rename('ND_green_red'));
  img = img.addBands(img.normalizedDifference(['green','nir'])  .rename('ND_green_nir')); //NDWBI
  // Índice Diferencial Normalizado de Nieve (NDSI), Modificación del Índice de Agua de Diferencia Normalizada (MNDWI)
  img = img.addBands(img.normalizedDifference(['green','swir1']).rename('ND_green_swir1')); 
  img = img.addBands(img.normalizedDifference(['green','swir2']).rename('ND_green_swir2'));

  img = img.addBands(img.normalizedDifference(['red','swir1']).rename('ND_red_swir1'));
  img = img.addBands(img.normalizedDifference(['red','swir2']).rename('ND_red_swir2'));
  
 // Índice de Vegetación de Diferencia Normalizada (NDVI)
  img = img.addBands(img.normalizedDifference(['nir','red'])  .rename('ND_nir_red')); 
  //Índice de Agua de Diferencia Normalizada (NDWI), Índice de Agua Superficial Terrestre (LSWI), -Índice de Diferencia Normalizada Edificada (NDBI)
  img = img.addBands(img.normalizedDifference(['nir','swir1']).rename('ND_nir_swir1')); 
  // Relación de Área Quemada Normalizada (NBR), Modificación del Índice de Vegetación de Diferencia Normalizada (MNDVI)
  img = img.addBands(img.normalizedDifference(['nir','swir2']).rename('ND_nir_swir2')); 

  img = img.addBands(img.normalizedDifference(['swir1','swir2']).rename('ND_swir1_swir2'));
  
  // Relación de la banda del infrarojo medio entre el infrarrojo cercano NIR 
  img = img.addBands(img.select('swir1').divide(img.select('nir'))  .rename('R_swir1_nir')); //ratio 5/4
  img = img.addBands(img.select('red')  .divide(img.select('swir1')).rename('R_red_swir1')); // ratio 3/5

  // Índice de Vegetación Mejorado (EVI)
  var evi = img.expression(
    '2.5 * ((NIR - RED) / (NIR + 6 * RED - 7.5 * BLUE + 1))', {
      'NIR': img.select('nir'),
      'RED': img.select('red'),
      'BLUE': img.select('blue')
  }).float();
  img = img.addBands(evi.rename('EVI'));
  
  // Índice de Vegetación Ajustado al Suelo (SAVI)
  // usando L = 0.5;
  var savi = img.expression(
    '(NIR - RED) * (1 + 0.5)/(NIR + RED + 0.5)', {
      'NIR': img.select('nir'),
      'RED': img.select('red')
  }).float();
  img = img.addBands(savi.rename('SAVI'));
  
  //Índice de Área Foliar (LAI) "LAI=if(SAVI_0.1<0.1,0.00001,(if(0.1<SAVI_0.1 && SAVI_0.1<0.687,-log((0.69-SAVI_0.1)/0.59)/0.91,if(SAVI_0.1>0.687,6,0))))"
  var lai = img.expression(
    '-(log((0.69 - SAVI) / 0.59)/ 0.91)', {
      'SAVI': savi,
  }).float(); 
  img = img.addBands(lai.rename('LAI'));
  
  // Relación Simple (SR)
var sr = img.expression(
  'NIR / RED',{
    'NIR': img.select('nir'),
    'RED': img.select('red')
  }).rename('SR');
  img = img.addBands(sr.rename('SR'));
    
// Índice de Vegetación Diferencial (DVI)
var dvi = img.expression(
  'NIR - RED',{
    'NIR': img.select('nir'),
    'RED': img.select('red')
  }).rename('DVI');
 img = img.addBands(dvi.rename('DVI')); 
 
 // Índice de Vegetación Relacionado RVI
var rvi = img.expression(
  'RED / NIR',{
    'RED': img.select('red'),
    'NIR': img.select('nir')
  }).rename('RVI');
  img = img.addBands(rvi.rename('RVI')); 
  
  // Verdor al Borde de Copa (TCG)
var tcg = img.expression(
  '-0.2848 * BLUE - 0.2435 * GREEN - 0.5436 * RED + 0.7243 * NIR + 0.0840 * SWIR1 + 0.18 * SWIR2',{
    'BLUE': img.select('blue'),
    'GREEN': img.select('green'),
    'RED': img.select('red'),
    'NIR': img.select('nir'),
    'SWIR1': img.select('swir1'),
    'SWIR2': img.select('swir2')
  }).rename('TCG');
 img = img.addBands(tcg.rename('TCG')); 
 
 
  // Índice Basado en Índice Construido (IBI)
  var ibi_a = img.expression(
    '2*SWIR1/(SWIR1 + NIR)', {
      'SWIR1': img.select('swir1'),
      'NIR': img.select('nir')
    }).rename('IBI_A');
    
  var ibi_b = img.expression(
    '(NIR/(NIR + RED)) + (GREEN/(GREEN + SWIR1))', {
      'NIR': img.select('nir'),
      'RED': img.select('red'),
      'GREEN': img.select('green'),
      'SWIR1': img.select('swir1')
    }).rename('IBI_B');
  ibi_a = ibi_a.addBands(ibi_b);
  var ibi = ibi_a.normalizedDifference(['IBI_A','IBI_B']);
  img = img.addBands(ibi.rename('IBI'));
  
 ////////////////////////////////////////////////////////////////////////////////
  //NIRv: Badgley, G., Field, C. B., & Berry, J. A. (2017). Canopy near-infrared reflectance and terrestrial photosynthesis. Science Advances, 3, e1602244.
  //https://www.researchgate.net/publication/315534107_Canopy_near-infrared_reflectance_and_terrestrial_photosynthesis
  // NIRv function: ‘image’ is a 2 band stack of NDVI and NIR
  //////////////////////////////////////////////////////////////////////////////////////////
  
  // Reflectancia del Infrarrojo Cercano NIRv
  var NIRv =  img.select(['ND_nir_red']).subtract(0.08)
              .multiply(img.select(['nir']));//.multiply(0.0001))
  img = img.addBands(savi.rename('SAVI')).addBands(NIRv.rename('NIRv'));  

//Índice de Suelo Desnudo (BSI)
  var bsi = img.expression(
  '((SWIR1 + RED) - (NIR + BLUE)) / ((SWIR1 + RED) + (NIR + BLUE))', {
    'BLUE': img.select('blue'),
    'RED': img.select('red'),
    'NIR': img.select('nir'),
    'SWIR1': img.select('swir1')
  }).float();
  img = img.addBands(bsi.rename('BSI'));
  
  //Índice Alto (HI)
  var hi = img.expression(
    'SWIR1 / SWIR2',{
      'SWIR1': img.select('swir1'),
      'SWIR2': img.select('swir2')
    }).float();
  img = img.addBands(hi.rename('HI'));  
  
  ///Índice de Fracción de Diferencia Normalizada (NDFI) Souza
    var gv = [500, 900, 400, 6100, 3000, 1000];
    var shade = [0, 0, 0, 0, 0, 0];
    var npv =  [1400, 1700, 2200, 3000, 5500, 3000];
    var soil = [2000, 3000, 3400, 5800, 6000, 5800];
    var cloud = [9000, 9600, 8000, 7800, 7200, 6500];
    
    //Desmezcla espectral en una sola imagen
    var unmixImage = ee.Image(img).select(bandas).unmix([gv, shade, npv, soil, cloud], true,true)
                    .rename(['band_0', 'band_1', 'band_2','band_3','band_4']);
    var newImage = ee.Image(img).select(bandas).addBands(unmixImage);
    //var mask = newImage.select('band_4').lt(cfThreshold)
  
    var ndfi = ee.Image(unmixImage).expression(
      '((GV / (1 - SHADE)) - (NPV + SOIL)) / ((GV / (1 - SHADE)) + NPV + SOIL)', {
        'GV': ee.Image(unmixImage).select('band_0'),
        'SHADE': ee.Image(unmixImage).select('band_1'),
        'NPV': ee.Image(unmixImage).select('band_2'),
        'SOIL': ee.Image(unmixImage).select('band_3')});
        img = img.addBands(ndfi.rename('NDFI'));  
    return img;
}

var Indices2005 = addIndices(M_T_2005);
var Indices2015 = addIndices(M_T_2015);

//Export to asset
Export.image.toAsset(
  {image:Indices2015, 
  description: 'Mosaico_Indices_2015', 
  region:studyArea.bounds(), 
  scale:30,
  maxPixels: 1e12});


//Muestras del Inventario Forestal
var cuts2015 = ee.FeatureCollection("users/omarorellanahn/mosaicos_degradacion/INF_Ciclo2_NREF_CUTs");
var cuts2005 = ee.FeatureCollection("users/omarorellanahn/mosaicos_degradacion/INF_Ciclo1_NREF_CUTs");

// Set selection bands
var bandas2005 = Indices2005.bandNames();
var bandas2015 = Indices2015.bandNames();

//SAMPLES 15
var trainingSamples = Indices2015.sampleRegions({
    collection: cuts2015,
    properties: ['C_sin_fust'],
    scale:     10});

//Entrenamiento 1
var classifier = ee.Classifier.randomForest(50)
                   .setOutputMode('REGRESSION')
                   .train(trainingSamples, 'C_sin_fust', bandas2015);
 
var classified05 = Indices2005.classify(classifier).rename('C_05');
var classified15 = Indices2015.classify(classifier).rename('C_15');

//SEGMENTATION
//segmentación carbono 2005
var segmentacionC_05 = ee.Algorithms.Image.Segmentation.SNIC({
                   image:classified05,
                   size: 12,
                   compactness:ee.Number(0.1),
                   connectivity:ee.Number(4)}).reproject({
                   crs:classified05.select(0).projection(),scale:12});
var C_SNIC_05 = segmentacionC_05.select('C_05_mean');

//segmentación carbono 20155
var segmentacionC_15 = ee.Algorithms.Image.Segmentation.SNIC({
                   image:classified15,
                   size: 12,
                   compactness:ee.Number(0.1),
                   connectivity:ee.Number(4)}).reproject({
                   crs:classified05.select(0).projection(),scale:12});
var C_SNIC_15 = segmentacionC_15.select('C_15_mean');

 var diferencia05_15 = C_SNIC_15.select("C_15_mean").subtract(C_SNIC_05.select("C_05_mean"));

//var Degradación_int = magnitud.multiply(classified15).rename('CO2').multiply(-1);
//var Degradación_c = classified15.subtract(classified05).rename('CO2');


//Visualización del capas
Map.addLayer(C_SNIC_05,    {min: 0,   max: 70, palette: ['e3e650', '357d44']},'carbono_05_SNIC', false);
Map.addLayer(C_SNIC_15,    {min: 0,   max: 70, palette: ['e3e650', '357d44']},'carbono_15_SNIC', false);
Map.addLayer(diferencia05_15,    {min: -50,   max: 50, palette: ['d63000','e3e650', 'e3e650', 'e3e650', '357d44']},'Diferent_co2', false);

//Map.addLayer(magnitud,  {min: 0,   max: 1, palette: ['2f9048', 'f6d73e','d63000']},'magnitud', false);
//Map.addLayer(Degradación_int,  {min: 0,   max: 70, palette: ['3d902e','ddf03e','d63000', 'd63000']},'Degradación_int', false);
//Map.addLayer(Degradación_c,  {min: 0,   max: 50, palette: ['2d7733','e3d155','d63000']},'Degradación_c', false);



